10 打dotaⅡ
在DOTA2中，乞求者卡尔可以召唤三种元素，冰(Quas)，雷(Wex)，火(Exort)，当你按下Q时，他会召唤一个冰元素，按下W召唤雷元素，按下E召唤火元素。所有元素总数量最大为3，这意味着当你已经拥有了3个任意元素时，若你再召唤一个元素，则最先召唤出的元素会消失，新元素诞生。与此同时，他还有一个技能-元素祈唤(R)。元素祈唤可以根据你当前拥有的各类元素数量施放不同的技能，施放技能后，元素并不会消失，当元素数量不足三个的时候不能施放出技能。更详细解释请看样例说明。请你根据卡尔的操作，打印出他放了什么技能,若不能施放出技能，则输出” FFFFFFFK”。技能列表如下图所示：

tup.png

输入格式:
一个只包含QWER的字符串，且长度不超过10^6。
输出格式:
每次卡尔按下R，就输出一个答案，每个答案占一行。

输入样例:
EERERWRWRWRR
输出样例:
FFFFFFFK
Sun Strike
Chaos Meteor
Alacrity
EMP
EMP

###提示： 状态没有顺序，比如WEE和EWE和EEW是相同的

在第一次使用R时，卡尔的状态为EE，并不能用出技能。

在第二次使用R时，卡尔的状态为EEE，能够使用Sun Strike

在第三次使用R时，卡尔的状态为EEW，能够使用Chaos Meteor

在第四次使用R时，卡尔的状态为EWW，能够使用Alacrity

在第五次使用R时，卡尔的状态为WWW,能够使用EMP

在第六次使用R时，卡尔的状态为WWW,能够使用EMP
===============================================================================================================================
c语言算法
#include <stdio.h>
#include <string.h>
void dota(char *c){
    if (strlen(c) < 3)
        printf("FFFFFFFK\n");
    else{
        if (strcmp(c, "WWW") == 0)
            printf("EMP\n");
        else if (strcmp(c, "QQQ") == 0)
            printf("Cold Snap\n");
        else if (strcmp(c, "EEE") == 0)
            printf("Sun Strike\n");
        else if (strcmp(c, "QWW") == 0 || strcmp(c, "WWQ") == 0 || strcmp(c, "WQW") == 0)
            printf("Tornado\n");
        else if (strcmp(c, "WWE") == 0 || strcmp(c, "EWW") == 0 || strcmp(c, "WEW") == 0)
            printf("Alacrity\n");
        else if (strcmp(c, "QQE") == 0 || strcmp(c, "QEQ") == 0 || strcmp(c, "EQQ") == 0)
            printf("Ice Wall\n");
        else if (strcmp(c, "QEE") == 0 || strcmp(c, "EQE") == 0 || strcmp(c, "EEQ") == 0)
            printf("Forge Spirit\n");
        else if (strcmp(c, "WEE") == 0 || strcmp(c, "EWE") == 0 || strcmp(c, "EEW") == 0)
            printf("Chaos Meteor\n");
        else if (strcmp(c, "QQW") == 0 || strcmp(c, "QWQ") == 0 || strcmp(c, "WQQ") == 0)
            printf("Ghost Walk\n");
        else
            printf("Deafening Blast\n");
    }
}

int main(){
    int n,j = 0;
    char a[1000001];
    char b[4]={'\0','\0','\0','\0'};
    scanf("%s", a);
    n = strlen(a);//不写这行，直接下面写i<strlen(a)不行吗？我认为，如果那么写，每执行一次都得重复运算一次strlen(a)，既费时还没用。
    for (int i = 0; i < n; i++){
        if (a[i] == 'R')
            dota(b);  //字符数组中的'\0'不算进strlen()里。
        else{
            if(j < 3)
                b[j++] = a[i];//与上面类似，这里把j++换成strlen(b)表面上看来好像可以，但是这导致每执行一次循环都得执行一次strlen()函数，用时会变多，容易超时.毕竟strlen()是O(N)，如果是O(1)的函数应该没这问题。
            else{
                b[0] = b[1];
                b[1] = b[2];
                b[2] = a[i];
            }
        }
    }
    return 0;
}
===========================================================================================================================================
c++stl解法，用到deque


#include<iostream>
#include<vector>
#include<deque> //queue没at，在这里不方便。
#include<string>
using namespace std;
int main(){
    deque<char> d;
    string s;
    cin>>s;
    int sz = s.size(); //省得每次循环都执行一次：先算好再执行循环。
    for(int i=0;i<sz;i++){
        if(s[i]=='R'){//为啥不把这里封装成一个函数？因为涉及d.size()、d.at()这样的函数。将队列传入函数时，我们用指针存储队列的首地址，没法做遍历？这部分知识还不太懂，回头查资料写博客。
            if(d.size()<3)
                cout<<"FFFFFFFK"<<endl;
            else{
                vector<int> a(3); //这样定义vector，数组中的值默认都为0.
                for(int i=0;i<3;i++){
                    if(d.at(i)=='W') a[0] += 1;
                    else if(d.at(i)=='Q') a[1] += 1;
                    else a[2] += 1;
                }
                if (a[0]==3&&a[1]==0&&a[2]==0) cout<<"EMP"<<endl;//不能用==来判断数组是否相等，只能逐位比较。因为==比较的是数组的开始内存地址。
                else if (a[0]==0&&a[1]==3&&a[2]==0) cout<<"Cold Snap"<<endl;
                else if (a[0]==0&&a[1]==0&&a[2]==3) cout<<"Sun Strike"<<endl;
                else if (a[0]==2&&a[1]==1&&a[2]==0) cout<<"Tornado"<<endl;
                else if (a[0]==2&&a[1]==0&&a[2]==1) cout<<"Alacrity"<<endl;
                else if (a[0]==0&&a[1]==2&&a[2]==1) cout<<"Ice Wall"<<endl;
                else if (a[0]==0&&a[1]==1&&a[2]==2) cout<<"Forge Spirit"<<endl;
                else if (a[0]==1&&a[1]==0&&a[2]==2) cout<<"Chaos Meteor"<<endl;
                else if (a[0]==1&&a[1]==2&&a[2]==0) cout<<"Ghost Walk"<<endl;
                else cout<<"Deafening Blast"<<endl;
            }
        }
        else{
            d.push_back(s[i]);
            while(d.size()>3) d.pop_front();
        }
    }
    return 0;
}
